"use strict";(self.webpackChunknasa_research_assistant=self.webpackChunknasa_research_assistant||[]).push([[610],{610:(e,t,a)=>{a.d(t,{SmartPaperFilter:()=>c});class c{static filterRelevantPapers(e,t){let a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:5;console.log(`\ud83d\udd0d Filtrando ${e.length} papers para: "${t}"`);const c=this.extractKeywords(t),s=[];e.forEach(e=>{const a=this.calculateRelevanceScore(e,c,t);a.relevanceScore>.1&&s.push(a),(e.title.toLowerCase().includes("cardiovascular")||e.title.toLowerCase().includes("cardiac")||e.title.toLowerCase().includes("heart"))&&console.log(`\ud83e\ude7a CARDIOVASCULAR PAPER: "${e.title}" - Score: ${a.relevanceScore.toFixed(2)}`)});const o=s.sort((e,t)=>t.relevanceScore-e.relevanceScore).slice(0,a);return console.log(`\u2705 Filtrados: ${o.length} papers m\xe1s relevantes`),console.log(`\ud83d\udcca Scores: ${o.map(e=>e.relevanceScore.toFixed(2)).join(", ")}`),console.log("\ud83d\udccb Papers seleccionados:"),o.forEach((e,t)=>{console.log(`   ${t+1}. "${e.paper.title}" (${e.relevanceScore.toFixed(2)})`)}),o}static calculateRelevanceScore(e,t,a){let c=0;const s=[];let o=!1,r=!1;const l=this.calculateTextMatch(e.title,t);l>0&&(c+=3*l,o=!0);const i=this.calculateKeywordMatch(e.keywords,t);i.score>0&&(c+=4*i.score,s.push(...i.matches));const n=this.calculateTextMatch(e.abstract,t);n>0&&(c+=1.5*n,r=!0);(new Date).getFullYear()-e.year<5&&(c+=.2);c+=this.calculateSemanticSimilarity(e,a);let u=0;if(a.toLowerCase().includes("cardiovascular")||a.toLowerCase().includes("cardiac")||a.toLowerCase().includes("heart")){const t=`${e.title} ${e.abstract} ${e.keywords.join(" ")}`.toLowerCase();(t.includes("cardiovascular")||t.includes("cardiac")||t.includes("heart")||t.includes("cardiomyocyte"))&&(u=3,console.log(`\ud83d\udc97 CARDIOVASCULAR BOOST: "${e.title}"`))}const h=c+u;return{paper:e,relevanceScore:Math.min(h,10),matchedKeywords:s,titleMatch:o,abstractMatch:r}}static extractKeywords(e){const t=new Set(["el","la","de","que","y","a","en","un","es","se","no","te","lo","le","da","su","por","son","con","para","al","del","los","las","una","como","the","and","or","but","in","on","at","to","for","of","with","by","\xbf","?","\xbfc\xf3mo","c\xf3mo","qu\xe9","cu\xe1les","cu\xe1l","d\xf3nde","cu\xe1ndo"]);return e.toLowerCase().replace(/[^\w\s]/g," ").split(/\s+/).filter(e=>e.length>2&&!t.has(e)).map(e=>e.trim())}static calculateTextMatch(e,t){if(!e)return 0;const a=e.toLowerCase();let c=0;return t.forEach(e=>{a.includes(e.toLowerCase())&&(c+=1)}),c/t.length}static calculateKeywordMatch(e,t){if(!e)return{score:0,matches:[]};const a=[];let c=0;return e.forEach(e=>{const s=e.toLowerCase();t.forEach(t=>{(s.includes(t.toLowerCase())||t.toLowerCase().includes(s))&&(a.push(e),c+=1)})}),{score:c/Math.max(t.length,1),matches:[...new Set(a)]}}static calculateSemanticSimilarity(e,t){const a=t.toLowerCase(),c=`${e.title} ${e.abstract} ${e.keywords.join(" ")}`.toLowerCase();let s=0;return Object.entries({bone:["hueso","\xf3seo","osteoblast","osteoclast","calcium","skeletal"],muscle:["m\xfasculo","muscular","myosin","actin","fiber","strength"],heart:["coraz\xf3n","cardio","cardiac","cardiovascular","blood","pressure"],brain:["cerebro","neural","neuron","cognitive","memory","behavior"],microgravity:["weightless","zero-g","spaceflight","orbital","space"],radiation:["cosmic","particle","dose","exposure","shielding"],experiment:["study","research","analysis","investigation","test"]}).forEach(e=>{let[t,o]=e;a.includes(t)&&o.forEach(e=>{c.includes(e.toLowerCase())&&(s+=.1)})}),Math.min(s,.5)}static distributeForAPI(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5;const a=[];for(let c=0;c<e.length;c+=t)a.push(e.slice(c,c+t));return a}}}}]);
//# sourceMappingURL=610.a5608f85.chunk.js.map